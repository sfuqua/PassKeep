<local:EntryDetailsViewBase
    x:Name="pageRoot"
    x:Class="PassKeep.Views.EntryDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PassKeep.Views"
    xmlns:common="using:PassKeep.Common"
    xmlns:controls="using:PassKeep.Controls"
    xmlns:vmd="using:PassKeep.ViewModels.Design"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    d:DesignWidth="1366"
    d:DesignHeight="768"
    d:DataContext="{d:DesignInstance Type=vmd:EntryDetailsDesignViewModel, IsDesignTimeCreatable=True}"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <local:EntryDetailsViewBase.Resources>
        <common:ValueConverterGroup x:Key="EmptyToVisibilityConverter">
            <common:HasItemsToBooleanConverter />
            <common:BooleanNegationConverter />
            <common:BooleanToVisibilityConverter />
        </common:ValueConverterGroup>
        <common:ValueConverterGroup x:Key="NegationToVisibilityConverter">
            <common:BooleanNegationConverter />
            <common:BooleanToVisibilityConverter />
        </common:ValueConverterGroup>
        <common:ValueConverterGroup x:Key="ReadOnlyToSelectionModeConverter">
            <common:BooleanNegationConverter />
            <controls:BooleanToSelectableConverter />
        </common:ValueConverterGroup>
        <common:OneLineTextConverter x:Key="OneLineTextConverter" />
        <controls:BooleanToTextBoxConverter x:Key="BooleanToTextBoxConverter" />
        
        <CollectionViewSource x:Name="fieldsSource" Source="{Binding Item.Fields}" />
    </local:EntryDetailsViewBase.Resources>
    
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/> <!-- Header -->
            <RowDefinition Height="50" /> <!-- Breadcrumbs -->
            <RowDefinition Height="*"/> <!-- Main content -->
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <controls:BreadcrumbNavigator Grid.Row="1" GroupClicked="breadcrumbClick" DataContext="{Binding BreadcrumbViewModel, ElementName=pageRoot}" />
        
        <Popup x:Name="passwordGeneratorPopup" IsLightDismissEnabled="True" Grid.Row="2"
               HorizontalOffset="400" VerticalOffset="0">
            <Border x:Name="passwordGeneratorBorder" BorderThickness="2" BorderBrush="White" Width="320" Background="Black"
                                DataContext="{Binding PasswordGenViewModel, ElementName=pageRoot}">
                <Border.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource EntryFieldLabel}">
                        <Setter Property="FontSize" Value="16" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource EntryStyle}">
                        <Setter Property="Margin" Value="6" />
                    </Style>
                </Border.Resources>
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Password Length:</TextBlock>
                        <TextBlock Text="{Binding Length}" />
                    </StackPanel>
                    <Slider Minimum="4" Maximum="50" Value="{Binding Length, Mode=TwoWay}" Width="300" Margin="10" StepFrequency="1" HorizontalAlignment="Left" />

                    <TextBlock>Allowed Characters</TextBlock>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseUpperCase, Mode=TwoWay}">ABCDEFGHIJ...</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseLowerCase, Mode=TwoWay}">acdefghij...</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseDigits, Mode=TwoWay}">0123456789</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseSpace, Mode=TwoWay}">Space</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseSymbols, Mode=TwoWay}">.!?@#$%^&amp;*&apos;&quot;`\/</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseBrackets, Mode=TwoWay}">[]{}()&lt;&gt;</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseMinus, Mode=TwoWay}">Minus -</CheckBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding UseUnderscore, Mode=TwoWay}">Underscore _</CheckBox>
                        </StackPanel>
                    </Grid>

                    <TextBlock>Also allow these characters</TextBlock>
                    <TextBox Text="{Binding AllowList, Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <TextBlock>
                                Any characters you type here will be <LineBreak />
                                potentially used in your generated password.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </TextBox>

                    <TextBlock>Exclude these characters</TextBlock>
                    <TextBox Text="{Binding ExcludeList, Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <TextBlock>
                                If you wish to avoid any characters in <LineBreak />
                                your generated password, enter them here.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </TextBox>

                    <TextBlock>Generate to...</TextBlock>
                    <Grid>
                        <Button Click="GeneratePassword_Click" Margin="5">
                            Password Box
                            <ToolTipService.ToolTip>
                                <TextBlock>
                                    Your generated password will be entered <LineBreak />
                                    into the password box for you.
                                </TextBlock>
                            </ToolTipService.ToolTip>
                        </Button>
                        <Button Click="GenerateToClipboard_Click" Margin="5" HorizontalAlignment="Right">
                            Clipboard
                            <ToolTipService.ToolTip>
                                <TextBlock>
                                    Your generated password will be copied <LineBreak />
                                    to your clipboard instead.
                                </TextBlock>
                            </ToolTipService.ToolTip>
                        </Button>
                    </Grid>
                </StackPanel>
            </Border>
        </Popup>

        <Grid Grid.Row="2" Margin="20,0,0,0">
            <Grid.Resources>
                <Style TargetType="TextBlock" BasedOn="{StaticResource EntryFieldLabel}">
                    <Setter Property="Margin" Value="5,5,0,5" />
                </Style>
                <Style TargetType="controls:ProtectedTextBox">
                    <Setter Property="ShowCopyButton" Value="False" />
                </Style>
            </Grid.Resources>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" /> <!-- Basic entry data -->
                <ColumnDefinition Width="*" /> <!-- Tags and Fields -->
            </Grid.ColumnDefinitions>
            
            <StackPanel x:Name="basicPanel" Orientation="Vertical" Width="360">
                <TextBlock>Entry Title</TextBlock>
                <controls:ProtectedTextBox x:Name="titleBox" DataContext="{Binding Item.Title}"
                                           BoxStyle="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
            
                <TextBlock>Username</TextBlock>
                <controls:ProtectedTextBox x:Name="usernameBox" DataContext="{Binding Item.UserName}"
                                           BoxStyle="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                
                <TextBlock>Password</TextBlock>
                <StackPanel Orientation="Horizontal">
                    <controls:ProtectedTextBox x:Name="passwordBox" DataContext="{Binding Item.Password}"
                                           BoxStyle="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                    <Button x:Name="PwGenButton" VerticalAlignment="Center"
                            Visibility="{Binding IsReadOnly, Converter={StaticResource NegationToVisibilityConverter}}"
                        FontFamily="Segoe UI Symbol" FontSize="24" FontWeight="ExtraLight"
                        BorderThickness="0" Padding="0" RenderTransformOrigin="0.5, 0.5"
                        Click="OpenPwGen_Click"
                        Content="&#xe192;" ToolTipService.ToolTip="Open password generator">
                        <Button.RenderTransform>
                            <RotateTransform Angle="270" />
                        </Button.RenderTransform>
                    </Button>
                </StackPanel>
                    
                <TextBlock>URL</TextBlock>
                <controls:ProtectedTextBox x:Name="urlBox" DataContext="{Binding Item.Url}"
                                           BoxStyle="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                
                <TextBlock>Override URL</TextBlock>
                <TextBox x:Name="overrideUrlBox" 
                         Text="{Binding Item.OverrideUrl, Mode=TwoWay}" Style="{Binding IsReadOnly, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}"
                         TextChanged="OverrideUrl_TextChanged"/>
                
                <TextBlock>Notes</TextBlock>
                <TextBox x:Name="notesBox"
                         Text="{Binding Item.Notes.ClearValue, Mode=TwoWay}" Style="{Binding IsReadOnly, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}"
                         TextChanged="Notes_TextChanged"
                         AcceptsReturn="True" TextWrapping="Wrap"
                         Height="180"/>
            </StackPanel>
            <Grid x:Name="fieldsPanel"
                        Grid.Column="1"
                        Margin="120,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                
                
                <TextBlock Grid.Row="0">Tags</TextBlock>
                <TextBox Grid.Row="1" x:Name="tagsBox"
                         Style="{Binding IsReadOnly, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}"
                         Text="{Binding Item.Tags, Mode=TwoWay}"
                         TextChanged="Tags_TextChanged"/>
                
                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10,0,0" Height="40">
                    <TextBlock VerticalAlignment="Center">Fields</TextBlock>
                    <Button x:Name="newField_btn" VerticalAlignment="Center" Margin="10,0,0,0"
                        Click="NewField_Click" Visibility="{Binding IsReadOnly, Converter={StaticResource NegationToVisibilityConverter}}">New...</Button>
                </StackPanel>
                
                <controls:VariableGridView Grid.Row="3" x:Name="fieldsGridView"
                                           ItemsSource="{Binding Item.Fields}"
                                           SelectionMode="Single" SelectionChanged="fieldsList_SelectionChanged"
                                           ScrollViewer.HorizontalScrollMode="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                           ScrollViewer.VerticalScrollMode="Enabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VariableSizedWrapGrid Orientation="Horizontal" ItemWidth="50" ItemHeight="40">
                            </VariableSizedWrapGrid>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <Border Width="250" Height="280" BorderThickness="0" Margin="0" Padding="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="White" Opacity="0.5" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="Blue" />
                                </Border.Background>
                                <Grid Margin="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" BorderThickness="0" Margin="0" Padding="0">
                                        <Border.Background>
                                            <SolidColorBrush Color="#100010"  Opacity="0.5" />
                                        </Border.Background>
                                        <TextBlock FontWeight="Bold" FontSize="15" Text="{Binding Key}" Margin="0" Padding="5,4,5,0" HorizontalAlignment="Left" />
                                    </Border>

                                    <Border Grid.Row="1" BorderThickness="0" Margin="0" Padding="0">
                                        <Border.Background>
                                            <SolidColorBrush Color="Black" Opacity="0.9" />
                                        </Border.Background>
                                        <controls:ProtectedTextBox Margin="0" Padding="0" DataContext="{Binding}" IsHitTestVisible="False">
                                            <controls:ProtectedTextBox.BoxStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="FontSize" Value="15" />
                                                    <Setter Property="FontFamily" Value="Segoe UI" />
                                                    <Setter Property="Foreground" Value="White" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="Margin" Value="0" />
                                                    <Setter Property="Padding" Value="5,5,5,5" />
                                                    <Setter Property="Width" Value="Auto" />
                                                    <Setter Property="MaxWidth" Value="240" />
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="True" />
                                                </Style>
                                            </controls:ProtectedTextBox.BoxStyle>
                                        </controls:ProtectedTextBox>
                                    </Border>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </controls:VariableGridView>
                <TextBlock Grid.Row="3" Visibility="{Binding ItemsSource.Count, ElementName=fieldsGridView, Converter={StaticResource EmptyToVisibilityConverter}}">(No fields found)</TextBlock>
            </Grid>
        </Grid>

        <Popup x:Name="fieldEditPopup" IsLightDismissEnabled="True"
               Width="200" Height="200" HorizontalAlignment="Left" VerticalAlignment="Top"
               DataContext="{Binding FieldEditViewModel, ElementName=pageRoot}" IsOpen="{Binding Editing, Mode=TwoWay}"
               Opened="fieldEditPopup_Opened" Grid.RowSpan="3">
            <Border BorderThickness="2" Padding="4"
                    BorderBrush="White" Background="Black">
                <StackPanel Orientation="Vertical" Width="{Binding Width, ElementName=fieldEditPopup}" Height="{Binding Height, ElementName=fieldEditPopup}">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource EntryFieldLabel}" />
                    </StackPanel.Resources>

                    <TextBlock>Name</TextBlock>
                    <TextBox x:Name="fieldEdit_NameBox"
                             Margin="4,0,4,4"
                             KeyDown="fieldEdit_KeyDown" TextChanged="fieldEdit_NameTextChanged"
                             Text="{Binding WorkingCopy.Key, Mode=TwoWay}" />

                    <TextBlock>Value</TextBlock>
                    <TextBox x:Name="fieldEdit_ValueBox"
                             Margin="4,0,4,4" MaxHeight="24" AcceptsReturn="True" TextWrapping="Wrap"
                             ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollMode="Enabled"
                             KeyDown="fieldEdit_KeyDown" TextChanged="fieldEdit_ValueTextChanged"
                             Text="{Binding WorkingCopy.ClearValue, Mode=TwoWay}" />

                    <CheckBox IsChecked="{Binding WorkingCopy.Protected, Mode=TwoWay}">Protect in memory</CheckBox>

                    <Button HorizontalAlignment="Center"
                            Command="{Binding SaveCommand}">Save</Button>
                </StackPanel>
            </Border>
        </Popup>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="titleBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="usernameBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="passwordBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="urlBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overrideUrlBox" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="notesBox" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tagsBox" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fieldsPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="passwordGeneratorPopup" Storyboard.TargetProperty="HorizontalOffset">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="titleBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="usernameBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="passwordBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="urlBox" Storyboard.TargetProperty="BoxStyle">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overrideUrlBox" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="notesBox" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tagsBox" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DataContext.IsReadOnly, ElementName=pageRoot, Converter={StaticResource BooleanToTextBoxConverter}, ConverterParameter='EntryStyle'}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</local:EntryDetailsViewBase>
