<view:DatabaseCreationViewBase
    x:Name="pageRoot"
    x:Class="PassKeep.Views.DatabaseCreationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PassKeep"
    xmlns:view="using:PassKeep.ViewBases"
    xmlns:controls="using:PassKeep.Views.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <view:DatabaseCreationViewBase.Resources>
        <Style TargetType="TextBlock" x:Key="ErrorStyle">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="Red" />
        </Style>

        <Style TargetType="TextBlock" x:Key="FieldValueStyle">
            <Setter Property="FontSize" Value="24" />
        </Style>

        <Style TargetType="TextBlock" x:Key="FieldLabelStyle"
               BasedOn="{StaticResource FieldValueStyle}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="0,0,15,0" />
        </Style>

        <Style TargetType="TextBlock" x:Key="InputLabelStyle"
               BasedOn="{StaticResource FieldValueStyle}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
    </view:DatabaseCreationViewBase.Resources>

    <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageStates">
                <VisualState x:Name="VerticalState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="emptyDatabaseCheckbox.Margin" Value="15,0,0,0" />
                        <Setter Target="emptyDatabaseCheckbox.(RelativePanel.AlignLeftWith)" Value="rememberDatabaseCheckbox" />
                        <Setter Target="emptyDatabaseCheckbox.(RelativePanel.Below)" Value="rememberDatabaseCheckbox" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HorizontalState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="emptyDatabaseCheckbox.Margin" Value="30,0,0,0" />
                        <Setter Target="emptyDatabaseCheckbox.(RelativePanel.RightOf)" Value="rememberDatabaseCheckbox" />
                        <Setter Target="emptyDatabaseCheckbox.(RelativePanel.AlignVerticalCenterWith)" Value="rememberDatabaseCheckbox" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <RelativePanel x:Name="layoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="5,0,0,0">
            <!-- Can't use a Flyout due to light dismiss behavior -->
            <Popup x:Name="capsLockPopup" IsOpen="False" IsLightDismissEnabled="False"
                   VerticalOffset="60" HorizontalOffset="20">
                <Border BorderThickness="2" BorderBrush="Gray" Background="White"
                        Width="300" Height="40">
                    <TextBlock x:Uid="CapsLockWarning" Text="Placeholder text" FontSize="18"
                               Foreground="#A00000" Margin="0" Padding="0"
                               HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
            </Popup>

            <TextBlock x:Name="passwordLabel" x:Uid="PasswordLabel"
                       RelativePanel.AlignLeftWithPanel="True"
                       Style="{StaticResource InputLabelStyle}" Text="Password placeholder" />
            <PasswordBox x:Name="passwordBox" PasswordRevealMode="Peek" TabIndex="0"
                         Width="250" Margin="0,0,0,10"
                         RelativePanel.AlignLeftWithPanel="True"
                         RelativePanel.Below="passwordLabel"
                         Password="{x:Bind ViewModel.MasterPassword, Mode=TwoWay}" KeyUp="PasswordBox_KeyUp"
                         GotFocus="passwordBox_GotFocus" LostFocus="passwordBox_LostFocus"
                         PasswordChanged="passwordBox_PasswordChanged">
            </PasswordBox>

            <TextBlock x:Name="passwordConfirmLabel" x:Uid="PasswordConfirmLabel"
                       Style="{StaticResource InputLabelStyle}" Text="Password placeholder"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.Below="passwordBox" />
            <PasswordBox x:Name="passwordConfirmBox" PasswordRevealMode="Peek" TabIndex="0"
                         Width="250" Margin="0,0,0,10"
                         RelativePanel.AlignLeftWithPanel="True"
                         RelativePanel.Below="passwordConfirmLabel"
                         Password="{x:Bind ViewModel.ConfirmedPassword, Mode=TwoWay}" KeyUp="PasswordBox_KeyUp"
                         GotFocus="passwordBox_GotFocus" LostFocus="passwordBox_LostFocus"
                         PasswordChanged="passwordConfirmBox_PasswordChanged">
            </PasswordBox>

            <TextBlock x:Name="keyfileLabel" x:Uid="KeyfileLabel"
                       RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="passwordConfirmBox"
                               Style="{StaticResource InputLabelStyle}" Text="Keyfile placeholder" />

            <RelativePanel x:Name="keyfilePanel" RelativePanel.Below="keyfileLabel" RelativePanel.AlignLeftWithPanel="True" Width="{x:Bind passwordBox.Width}"
                           Margin="0,0,0,10">
                <Button x:Name="chooseKeyfileButton" x:Uid="ChooseKeyfileButton"
                        RelativePanel.AlignVerticalCenterWithPanel="True"
                        FontFamily="Segoe UI Symbol" FontSize="24" FontWeight="ExtraLight"
                        BorderThickness="0" Padding="0" Background="Transparent"
                        Click="ChooseKeyfileButton_Click"
                        Margin="0,0,4,0">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xe132;" />
                </Button>

                <TextBox Text="{x:Bind ViewModel.KeyFile.Name, Mode=OneWay, FallbackValue={StaticResource EmptyString}}"
                         RelativePanel.RightOf="chooseKeyfileButton" RelativePanel.AlignRightWithPanel="True"
                         TextChanged="KeyFileBox_TextChanged"/>
            </RelativePanel>

            <TextBlock x:Name="encryptionRoundsLabel" x:Uid="EncryptionRoundsLabel"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.Below="keyfilePanel" Margin="0,0,10,5"
                       Style="{StaticResource InputLabelStyle}" Text="Encryption rounds placeholder" />

            <controls:HelpIcon x:Uid="EncryptionRoundsToolTip"
                               RelativePanel.RightOf="encryptionRoundsLabel" RelativePanel.AlignVerticalCenterWith="encryptionRoundsLabel" />
                
            <controls:NumericUpDown x:Name="encryptionRounds" Width="120"
                                    RelativePanel.AlignLeftWithPanel="True"
                                    RelativePanel.Below="encryptionRoundsLabel" Min="1" Value="{Binding ViewModel.EncryptionRounds, Mode=TwoWay, ElementName=pageRoot}" />

            <Button x:Name="encryptionRoundsOneSecond" x:Uid="EncryptionRoundsOneSecond"
                    Margin="10,0,0,0"
                    RelativePanel.RightOf="encryptionRounds" RelativePanel.AlignVerticalCenterWith="encryptionRounds"
                    Click="encryptionRoundsOneSecond_Click">
                One second placeholder
            </Button>

            <CheckBox x:Name="rememberDatabaseCheckbox" x:Uid="RememberDatabaseCheckbox"
                      RelativePanel.Below="encryptionRounds" RelativePanel.AlignLeftWithPanel="True"
                      FontSize="20"
                      Margin="15,5,0,0" Padding="4,3,0,0"
                      IsChecked="{Binding Remember, Mode=TwoWay}">
                Remember placeholder
            </CheckBox>

            <CheckBox x:Name="emptyDatabaseCheckbox" x:Uid="CreateEmptyDatabase"
                      FontSize="20" Padding="4,3,0,0"
                      IsChecked="{Binding CreateEmpty, Mode=TwoWay}">
                Empty database placeholder
            </CheckBox>

            <Button x:Name="createButton" x:Uid="CreateDatabase" Margin="0,10,0,0"
                    RelativePanel.Below="emptyDatabaseCheckbox" RelativePanel.AlignLeftWithPanel="True"
                    Command="{x:Bind ViewModel.CreateCommand, Mode=OneTime}">
                Create Placeholder
            </Button>
        </RelativePanel>
    </ScrollViewer>
</view:DatabaseCreationViewBase>
