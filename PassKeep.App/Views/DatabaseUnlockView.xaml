<view:DatabaseUnlockViewBase
    x:Name="pageRoot"
    x:Class="PassKeep.Views.DatabaseUnlockView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PassKeep.Views"
    xmlns:view="using:PassKeep.ViewBases"
    xmlns:common="using:PassKeep.Common"
    xmlns:convert="using:PassKeep.Converters"
    xmlns:dvm="using:PassKeep.ViewModels.DesignTime"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="Page_Loaded">

    <d:Page.DataContext>
        <dvm:DesignDatabaseUnlockViewModel />
    </d:Page.DataContext>

    <view:DatabaseUnlockViewBase.Resources>
        <Style TargetType="TextBlock" x:Key="ErrorStyle">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="Red" />
        </Style>
        
        <Style TargetType="TextBlock" x:Key="FieldValueStyle">
            <Setter Property="FontSize" Value="24" />
        </Style>

        <Style TargetType="TextBlock" x:Key="FieldLabelStyle"
               BasedOn="{StaticResource FieldValueStyle}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="0,0,15,0" />
        </Style>
        
        <Style TargetType="TextBlock" x:Key="InputLabelStyle"
               BasedOn="{StaticResource FieldValueStyle}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
    </view:DatabaseUnlockViewBase.Resources>
    
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MetadataStates">
                <VisualState x:Name="CollapsedState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="fileLabel.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="sizeLabel.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="sizeLabel.(RelativePanel.Below)" Value="fileName" />
                        <Setter Target="dateModifiedLabel.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="dateModifiedLabel.(RelativePanel.Below)" Value="fileSize" />
                        
                        <Setter Target="fileName.(RelativePanel.Below)" Value="fileLabel" />
                        <Setter Target="fileSize.(RelativePanel.Below)" Value="sizeLabel" />
                        <Setter Target="fileLastModified.(RelativePanel.Below)" Value="dateModifiedLabel" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ExpandedState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <!--<Setter Target="fileLabel.(RelativePanel.AlignRightWith)" Value="dateModifiedLabel" />
                        <Setter Target="sizeLabel.(RelativePanel.AlignRightWith)" Value="dateModifiedLabel" />-->
                        <Setter Target="sizeLabel.(RelativePanel.Below)" Value="fileLabel" />
                        <Setter Target="dateModifiedLabel.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="dateModifiedLabel.(RelativePanel.Below)" Value="sizeLabel" />

                        <Setter Target="fileName.(RelativePanel.RightOf)" Value="fileLabel" />
                        <Setter Target="fileSize.(RelativePanel.RightOf)" Value="sizeLabel" />
                        <Setter Target="fileSize.(RelativePanel.Below)" Value="fileName" />
                        <Setter Target="fileLastModified.(RelativePanel.RightOf)" Value="dateModifiedLabel" />
                        <Setter Target="fileLastModified.(RelativePanel.Below)" Value="fileSize" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="PageStates">
                <VisualState x:Name="VerticalState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="formPanel.(RelativePanel.Below)" Value="errorText" />
                        <Setter Target="metadataPanel.(RelativePanel.Below)" Value="formPanel" />
                        <Setter Target="metadataPanel.Margin" Value="10,10,0,0" />
                        <Setter Target="chooseKeyFileIcon.FontSize" Value="40" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HorizontalState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="formPanel.(RelativePanel.Below)" Value="errorText" />
                        <Setter Target="metadataPanel.(RelativePanel.RightOf)" Value="formPanel" />
                        <Setter Target="metadataPanel.(RelativePanel.AlignVerticalCenterWith)" Value="formPanel" />
                        <Setter Target="metadataPanel.Margin" Value="20,10,0,0" />
                        <Setter Target="chooseKeyFileIcon.FontSize" Value="28" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <RelativePanel x:Name="contentPanel">
            <TextBlock x:Name="errorText" Style="{StaticResource ErrorStyle}"
                       Margin="10,0,10,0"
                       Visibility="{Binding ParseResult.IsError,
                            Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, FallbackValue=Collapsed}"
                       Text="{x:Bind ViewModel.ParseResult, Mode=OneWay, FallbackValue=N/A, TargetNullValue=N/A}" TextWrapping="Wrap" 
                       RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignTopWithPanel="True" />
                
            <RelativePanel x:Name="metadataPanel">
                <TextBlock x:Name="fileLabel" x:Uid="FileLabel"
                            Style="{StaticResource FieldLabelStyle}" Text="File placeholder" />
                <TextBlock x:Name="fileName" Style="{StaticResource FieldValueStyle}" Text="{x:Bind ViewModel.CandidateFile.FileName, FallbackValue={StaticResource EmptyString}, Mode=OneWay}" />
                
                <TextBlock x:Name="sizeLabel" x:Uid="SizeLabel"
                            Style="{StaticResource FieldLabelStyle}" Text="Size placeholder" />
                <TextBlock x:Name="fileSize" Style="{StaticResource FieldValueStyle}"
                            Text="{x:Bind ViewModel.CandidateFile.Size, Converter={StaticResource FileSizeConverter}, FallbackValue={StaticResource EmptyString}, Mode=OneWay}" />
                
                <TextBlock x:Name="dateModifiedLabel" x:Uid="DateModifiedLabel"
                            Style="{StaticResource FieldLabelStyle}" Text="Last modified placeholder" />
                <TextBlock x:Name="fileLastModified" Style="{StaticResource FieldValueStyle}"
                            Text="{x:Bind ViewModel.CandidateFile.LastModified.Value.LocalDateTime, FallbackValue={StaticResource EmptyString}, Mode=OneWay}" />
            </RelativePanel>

            <RelativePanel x:Name="formPanel" Margin="10,10,0,0"> 
                <!-- We are stuck using a popup instead of an attached flyout due to light dismiss behavior... :( -->
                <Popup x:Name="capsLockPopup" IsOpen="False" IsLightDismissEnabled="False"
                        VerticalOffset="60" HorizontalOffset="20">
                    <Border BorderThickness="2" BorderBrush="Gray" Background="White"
                            Width="300" Height="40">
                        <TextBlock x:Uid="CapsLockWarning" Text="Placeholder text" FontSize="18"
                                   Foreground="#A00000" Margin="0" Padding="0"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </Popup>

                <TextBlock x:Name="passwordLabel" x:Uid="PasswordLabel"
                           Style="{StaticResource InputLabelStyle}" Text="Password placeholder" />
                <PasswordBox x:Name="passwordBox" PasswordRevealMode="Peek" TabIndex="0"
                             Width="250"
                             RelativePanel.Below="passwordLabel"
                             IsEnabled="{x:Bind unlockButton.IsEnabled, Mode=OneWay}" Margin="0,0,0,10"
                             IsEnabledChanged="passwordBox_IsEnabledChanged"
                             Password="{x:Bind ViewModel.Password, Mode=TwoWay}" KeyUp="PasswordBox_KeyUp"
                             GotFocus="passwordBox_GotFocus" LostFocus="passwordBox_LostFocus">
                </PasswordBox>
                <TextBlock x:Name="keyfileLabel" x:Uid="KeyfileLabel"
                           RelativePanel.Below="passwordBox"
                           Style="{StaticResource InputLabelStyle}" Text="Keyfile placeholder" />

                <RelativePanel x:Name="keyfilePanel" RelativePanel.Below="keyfileLabel" Width="{x:Bind passwordBox.Width}">
                    <Button x:Name="chooseKeyfileButton" x:Uid="ChooseKeyfileButton"
                            RelativePanel.AlignVerticalCenterWithPanel="True"
                            FontFamily="Segoe UI Symbol" FontSize="24" FontWeight="ExtraLight"
                            BorderThickness="0" Padding="0,0,0,0" Background="Transparent"
                            IsEnabled="{x:Bind unlockButton.IsEnabled, Mode=OneWay}"
                            Click="ChooseKeyfileButton_Click"
                            Margin="0,0,4,0">
                        <FontIcon x:Name="chooseKeyFileIcon" FontFamily="Segoe MDL2 Assets" Glyph="&#xe132;" />
                    </Button>

                    <TextBox IsEnabled="False" Text="{x:Bind ViewModel.KeyFile.Name, Mode=OneWay, FallbackValue={StaticResource EmptyString}}"
                             RelativePanel.RightOf="chooseKeyfileButton" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWith="chooseKeyfileButton" />
                </RelativePanel>

                <CheckBox x:Name="rememberDatabaseCheckbox" x:Uid="RememberDatabaseCheckbox"
                          RelativePanel.Below="keyfilePanel"
                          FontSize="20"
                          Padding="8,-3,0,0" Margin="15,15,0,0"
                          IsEnabled="{x:Bind ViewModel.IsSampleFile, Converter={StaticResource BooleanNegationConverter}, Mode=OneWay}"
                          IsChecked="{Binding RememberDatabase, Mode=OneWay}">
                    Remember placeholder
                </CheckBox>
                             
                <Button x:Name="unlockButton" x:Uid="UnlockButton"
                        RelativePanel.Below="rememberDatabaseCheckbox"
                        Command="{x:Bind ViewModel.UnlockCommand, Mode=OneWay}">
                    Unlock Placeholder
                </Button>

                <Button x:Uid="DifferentDatabaseButton"
                        RelativePanel.RightOf="unlockButton" Margin="20,0,0,0"
                        RelativePanel.AlignTopWith="unlockButton"
                        Click="DifferentDatabaseButton_Click">
                    Different Database
                </Button>
            </RelativePanel>
        </RelativePanel>
    </RelativePanel>
</view:DatabaseUnlockViewBase>
