<view:DatabaseViewBase
    x:Name="pageRoot"
    x:Class="PassKeep.Views.DatabaseView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PassKeep.Views"
    xmlns:controls="using:PassKeep.Views.Controls"
    xmlns:view="using:PassKeep.ViewBases"
    xmlns:common="using:PassKeep.Common"
    xmlns:convert="using:PassKeep.Converters"
    xmlns:dvm="using:PassKeep.ViewModels.DesignTime"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    
    <d:Page.DataContext>
        <dvm:DesignDatabaseViewModel />
    </d:Page.DataContext>
    
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->

    <Grid x:Name="contentFrame">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="5" />
            <RowDefinition Height="65" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Breadcrumb navigator -->
        <controls:BreadcrumbNavigator Grid.Row="0" DataContext="{Binding NavigationViewModel}" GroupClicked="Breadcrumb_GroupClicked"
                                          VerticalAlignment="Center" VerticalContentAlignment="Center" />

        <ProgressBar Grid.Row="1" Minimum="0" Maximum="1" Foreground="{StaticResource GroupBorderColor}" Background="{StaticResource EntryBorderColor}"
                Value="{Binding ClipboardClearViewModel.NormalizedTimeRemaining, ElementName=pageRoot}"
                Margin="0" />

        <Grid Grid.Row="2" Margin="40,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Column="0" Height="30"
                          ItemsSource="{Binding AvailableSortModes, Mode=OneTime}" SelectedItem="{Binding SortMode, Mode=TwoWay}"
                          SelectionChanged="Sort_SelectionChanged" />
        </Grid>

        <GridView x:Name="childGridView" Grid.Row="3"
                  ItemsSource="{Binding SortedChildren}"
                  ItemTemplateSelector="{StaticResource NodeTemplateSelector}"
                  IsItemClickEnabled="True"
                  ItemClick="ChildGridView_ItemClick"
                  SelectionMode="Multiple"
                  SelectionChanged="ChildGridView_SelectionChanged">
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition />
                    <AddDeleteThemeTransition />
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
        </GridView>
    </Grid>

    <view:DatabaseViewBase.BottomAppBar>
        <CommandBar>
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="Edit" Icon="Edit"
                              IsEnabled="{x:Bind childGridView.SelectedItem, Converter={StaticResource ExistenceToBooleanConverter}, Mode=OneWay}">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyout.Items>
                                <MenuFlyoutItem x:Uid="Rename"
                                                Click="{x:Bind PromptToRenameSelection}" />
                                <MenuFlyoutItem x:Uid="Details"
                                                Command="{x:Bind editDetailsCommand}" />
                            </MenuFlyout.Items>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton x:Uid="Delete" Icon="Delete"
                              IsEnabled="{x:Bind childGridView.SelectedItem, Converter={StaticResource ExistenceToBooleanConverter}, Mode=OneWay}"
                              Click="{x:Bind PromptToDeleteSelection}" />
                
                <AppBarButton x:Uid="Create" Icon="Add">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyout.Items>
                                <MenuFlyoutItem x:Uid="NewEntry"
                                                Click="{x:Bind CreateEntry}" />
                                <MenuFlyoutItem x:Uid="NewGroup"
                                                Click="{x:Bind CreateGroup}" />
                            </MenuFlyout.Items>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </view:DatabaseViewBase.BottomAppBar>
</view:DatabaseViewBase>
