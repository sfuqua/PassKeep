<!--
Copyright 2017 Steven Fuqua
This file is part of PassKeep and is licensed under the GNU GPL v3.
For the full license, see gpl-3.0.md in this solution or under https://bitbucket.org/sapph/passkeep/src
-->

<vb:RootViewBase
    x:Name="pageRoot"
    x:Class="PassKeep.Framework.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fw="using:PassKeep.Framework"
    xmlns:vb="using:PassKeep.ViewBases"
    xmlns:vm="using:PassKeep.Lib.Contracts.ViewModels"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Grid>
        <!-- Main content -->
        <muxc:NavigationView x:Name="NavigationView"
            CompactModeThresholdWidth="0" ExpandedModeThresholdWidth="1007"
            IsSettingsVisible="True"
            ItemInvoked="NavigationView_ItemInvoked"
            SelectionChanged="NavigationView_SelectionChanged"
            BackRequested="NavigationView_BackRequested">
            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItem x:Uid="DashboardNav" Content="DashboardPlaceholder" x:Name="dashNavItem">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE12A;" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItem x:Uid="OpenNav" Content="OpenPlaceholder" x:Name="openNavItem">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE1A5;" />
                    </muxc:NavigationViewItem.Icon>
                    <muxc:NavigationViewItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="O" Modifiers="Control" />
                    </muxc:NavigationViewItem.KeyboardAccelerators>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItem x:Uid="HomeNav" Content="HomePlaceholder" x:Name="homeNavItem"
                    Visibility="{x:Bind ViewModel.DecryptedDatabase, Converter={StaticResource ExistenceToVisibilityConverter}, Mode=OneWay}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE10F;" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItem x:Uid="PasswordNav" Content="PasswordPlaceholder" x:Name="passwordNavItem">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE8D7;" />
                    </muxc:NavigationViewItem.Icon>

                    <FlyoutBase.AttachedFlyout>
                        <Flyout Placement="Right" Closing="Flyout_Closing">
                            <StackPanel Orientation="Vertical" Width="286" DataContext="{x:Bind ViewModel.PasswordGenViewModel, Mode=OneWay}"
                                            Margin="0" Padding="0">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="16" />
                                    </Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Margin" Value="6" />
                                    </Style>
                                </StackPanel.Resources>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>
                                            <Run x:Uid="PasswordGenLengthInfo">Password length prompt</Run><Run>&#160;</Run>
                                    </TextBlock>
                                    <TextBlock Text="{x:Bind lengthSlider.Value, Mode=OneWay}" />
                                </StackPanel>
                                <Slider x:Name="lengthSlider" Minimum="4" Maximum="50" Value="{Binding Length, Mode=TwoWay}" Width="262" Margin="10" StepFrequency="1" HorizontalAlignment="Left" />

                                <TextBlock x:Uid="PasswordGenAllowedCharsHeader">Allowed chars placeholder</TextBlock>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeUpperAlpha"
                                                      IsChecked="{Binding UseUpperCase, Mode=TwoWay}">ABCDEFGHIJ...</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeLowerAlpha"
                                                      IsChecked="{Binding UseLowerCase, Mode=TwoWay}">acdefghij...</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeDigits"
                                                      IsChecked="{Binding UseDigits, Mode=TwoWay}">0123456789</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeSpace"
                                                      IsChecked="{Binding UseSpace, Mode=TwoWay}">Space</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeSymbols"
                                                      IsChecked="{Binding UseSymbols, Mode=TwoWay}">.!?@#$%^&amp;*&apos;&quot;`\/</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeBrackets"
                                                      IsChecked="{Binding UseBrackets, Mode=TwoWay}">[]{}()&lt;&gt;</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeMinus"
                                                      IsChecked="{Binding UseMinus, Mode=TwoWay}">Minus -</CheckBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal">
                                        <CheckBox x:Uid="PasswordGenIncludeUnderscore"
                                                      IsChecked="{Binding UseUnderscore, Mode=TwoWay}">Underscore _</CheckBox>
                                    </StackPanel>
                                </Grid>

                                <TextBlock x:Uid="PasswordGenAlsoAllowHeader">Also allow these characters</TextBlock>
                                <TextBox x:Uid="PasswordGenAlsoAllowBox" Text="{x:Bind ViewModel.PasswordGenViewModel.AllowList, Mode=TwoWay}">
                                    <ToolTipService.ToolTip>
                                        Placeholder
                                    </ToolTipService.ToolTip>
                                </TextBox>

                                <TextBlock x:Uid="PasswordGenExcludeHeader">Exclude these characters</TextBlock>
                                <TextBox x:Uid="PasswordGenExcludeBox" Text="{x:Bind ViewModel.PasswordGenViewModel.ExcludeList, Mode=TwoWay}">
                                    <ToolTipService.ToolTip>
                                        Placeholder
                                    </ToolTipService.ToolTip>
                                </TextBox>

                                <TextBlock x:Uid="PasswordGenGenerateToLabel">Generate to...</TextBlock>
                                <Grid>
                                    <!-- TODO
                                        <Button x:Uid="PasswordGenPasswordBoxButton" Margin="5">
                                            Password Box
                                            <ToolTipService.ToolTip>
                                                Placeholder
                                            </ToolTipService.ToolTip>
                                        </Button>
                                        -->
                                    <Button x:Uid="PasswordBoxGenPasswordClipboardButton" Margin="5"
                                                Command="{x:Bind ViewModel.PasswordGenViewModel.ClipboardCopyCommand}">
                                        Clipboard
                                        <ToolTipService.ToolTip>
                                            Placeholder
                                        </ToolTipService.ToolTip>
                                    </Button>
                                </Grid>
                            </StackPanel>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItem x:Uid="HelpNav" Content="HelpPlaceholder" x:Name="helpNavItem">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon  Glyph="&#xE11B;" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.MenuItems>

            <!--
            <muxc:NavigationView.AutoSuggestBox>
                <AutoSuggestBox />
            </muxc:NavigationView.AutoSuggestBox>
            -->

            <!--
            <muxc:NavigationView.HeaderTemplate>
                <DataTemplate x:DataType="fw:RootView">

                </DataTemplate>
            </muxc:NavigationView.HeaderTemplate>
            -->

            <RelativePanel>
                <!-- "Chrome" -->
                <RelativePanel x:Name="appChrome" Background="{ThemeResource AppBarBackgroundThemeBrush}"
                       RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                    <!-- Clipboard clear timer -->
                    <RelativePanel Height="30" RelativePanel.LeftOf="savingIndicator" RelativePanel.AlignVerticalCenterWithPanel="True"
                           Margin="0,0,10,0"
                           Visibility="{x:Bind ViewModel.ClipboardClearViewModel.TimeRemainingInSeconds, Mode=OneWay, Converter={StaticResource NonZeroDoubleToVisibilityConverter}}">
                        <TextBlock x:Name="clipboardClearIcon" FontFamily="Segoe MDL2 Assets" Text="&#xE16D;" FontSize="20"
                           RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True" />
                        <Border x:Name="clipboardClearTimerText" BorderBrush="{x:Null}"
                        RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWithPanel="True"
                        RelativePanel.LeftOf="clipboardClearIcon">
                            <TextBlock x:Name="clipboardClearTimer" FontSize="20"
                               Text="{x:Bind ViewModel.ClipboardClearViewModel.TimeRemainingInSeconds, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:0.0}'}"/>
                        </Border>
                    </RelativePanel>

                    <!-- Saving progress indicator -->
                    <RelativePanel x:Name="savingIndicator" x:Uid="SavingIndicator" Height="30" Margin="0,0,10,0"
                            RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True"
                            Visibility="{x:Bind ViewModel.IsSaving, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ProgressRing x:Name="savingIndicatorRing" Height="30" Width="30" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}" IsActive="True"
                              RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True" />
                        <FontIcon FontSize="12" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}" FontFamily="Segoe MDL2 Assets"
                          Glyph="&#xE105;" RelativePanel.AlignHorizontalCenterWith="savingIndicatorRing" RelativePanel.AlignVerticalCenterWith="savingIndicatorRing" />
                    </RelativePanel>
                </RelativePanel>

                <ContentControl x:Name="RootCommandBar" Content="{x:Bind CommandBar, Mode=OneWay}"
                            Visibility="{x:Bind HasActiveCommandBar, Mode=OneWay}"
                            RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True">
                </ContentControl>

                <Frame x:Name="contentFrame" Navigated="ContentFrame_Navigated" Grid.Row="1"
                       RelativePanel.AlignTopWithPanel="True" RelativePanel.Above="RootCommandBar"
                       RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                       IsEnabled="{x:Bind ViewModel.TaskNotificationService.CurrentTask.IsCompleted, Mode=OneWay, FallbackValue=true}" />
            </RelativePanel>
        </muxc:NavigationView>

        <!-- "Loading" progressbar -->
        <RelativePanel x:Name="loadingPane"
                       x:DeferLoadStrategy="Lazy"
                       Visibility="{Binding ViewModel.TaskNotificationService.CurrentTask.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
                       Background="Transparent"
                       RelativePanel.AlignTopWith="appChrome"
                       RelativePanel.AlignBottomWith="appChrome"
                       RelativePanel.AlignLeftWith="appChrome"
					   RelativePanel.AlignRightWith="appChrome"
                       Margin="48,0,0,0">
            <RelativePanel Background="Transparent"
                           RelativePanel.AlignHorizontalCenterWithPanel="True"
                           RelativePanel.AlignVerticalCenterWithPanel="True">
                <ProgressBar x:Name="loadingStatusIndeterminate"
                             IsIndeterminate="True"
                             Width="240"/>
                <ProgressBar x:Name="loadingStatusDeterminate"
                             Minimum="0"
                             Maximum="1"
                             Value="0"
                             Visibility="Collapsed"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center" />
            </RelativePanel>
        </RelativePanel>

    </Grid>
</vb:RootViewBase>
