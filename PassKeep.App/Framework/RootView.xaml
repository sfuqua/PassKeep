<vb:RootViewBase
    x:Name="pageRoot"
    x:Class="PassKeep.Framework.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vb="using:PassKeep.ViewBases"
    xmlns:local="using:PassKeep.Framework"
    xmlns:flyouts="using:PassKeep.Views.Flyouts"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <vb:RootViewBase.Resources>
        <Style x:Key="SplitViewButton" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Padding="0" Margin="8,4,8,4"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SplitViewGlyph" TargetType="FontIcon">
            <Setter Property="Width" Value="48" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="20" />
        </Style>
    </vb:RootViewBase.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!-- "Mobile" compressed view -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="mainSplitView.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>

                <!-- "Main" view with compact flyout -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="mainSplitView.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>

                <!-- "Wide" view with open pane -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="mainSplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- "Chrome" -->
        <RelativePanel x:Name="appChrome" Background="{ThemeResource AppBarBackgroundThemeBrush}"
                       RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
            <!-- Hamburger/Title bar-->
            <Button x:Name="splitViewButton" Click="SplitViewToggle_Click"
                    Width="48"
                    Background="Transparent"
                    Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                    Padding="12" Margin="0" Style="{StaticResource SplitViewButton}">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE700;" FontSize="20" />
            </Button>
            
            <!-- Clipboard clear timer -->
            <RelativePanel Height="30" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True"
                           Margin="0,0,10,0"
                           Visibility="{x:Bind ViewModel.ClipboardClearViewModel.TimeRemainingInSeconds, Mode=OneWay, Converter={StaticResource NonZeroDoubleToVisibilityConverter}}">
                <TextBlock x:Name="clipboardClearIcon" FontFamily="Segoe MDL2 Assets" Text="&#xE16D;" FontSize="20"
                           RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True" />
                <Border x:Name="clipboardClearTimerText" BorderBrush="{x:Null}"
                        RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWithPanel="True"
                        RelativePanel.LeftOf="clipboardClearIcon">
                    <TextBlock x:Name="clipboardClearTimer" FontSize="20"
                               Text="{x:Bind ViewModel.ClipboardClearViewModel.TimeRemainingInSeconds, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:0.0}'}"/>
                </Border>
            </RelativePanel>

            <!-- Back button -->
            <!-- Removed in favor of system chrome -->
            <!--
            <Button  x:Name="backButton" Command="{x:Bind ContentBackCommand, Mode=OneWay}"
                     RelativePanel.RightOf="splitViewButton" RelativePanel.AlignVerticalCenterWith="splitViewButton"
                     Style="{ThemeResource NavigationBackButtonNormalStyle}"
                     VerticalAlignment="Top"
                     AutomationProperties.Name="Back"
                     AutomationProperties.AutomationId="BackButton"
                     AutomationProperties.ItemType="Navigation Button"/>

            <TextBlock x:Uid="AppName" Text="Placeholder"
                       Margin="5" Style="{ThemeResource BodyTextBlockStyle}"
                       RelativePanel.RightOf="backButton" RelativePanel.AlignVerticalCenterWith="backButton" />
            -->
        </RelativePanel>

        <!-- Main content
			 Does not Align with Backbutton at 175% Scaling -->
        <SplitView x:Name="mainSplitView"
                   CompactPaneLength="48" OpenPaneLength="200"
                   RelativePanel.Below="appChrome"
                   RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                   RelativePanel.AlignBottomWithPanel="True">
            <SplitView.Pane>
                <ListView x:Name="splitViewList" HorizontalAlignment="Stretch"
                          SelectionMode="Single" SelectionChanged="SplitViewList_SelectionChanged">
                    
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="MinWidth" Value="0" />
							<Setter Property="Padding" Value="0" />
                        </Style>
                        
                        <!--<Style TargetType="RelativePanel">
                            <Setter Property="Margin" Value="-12,0,0,0" />
                        </Style>-->
                    </ListView.Resources>
                    
                    <!-- ListViewItems consisting of:
                            * Glyph
                            * TextBlocks to the right -->
                    <ListViewItem x:Name="dashItem" IsSelected="True">
                        <RelativePanel>
                            <FontIcon x:Name="dashGlyph" Style="{StaticResource SplitViewGlyph}" Glyph="&#xE12A;"></FontIcon>
                            <TextBlock x:Uid="Dashboard" RelativePanel.RightOf="dashGlyph" RelativePanel.AlignVerticalCenterWith="dashGlyph"
                                       Visibility="{x:Bind mainSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Dash placeholder</TextBlock>
                        </RelativePanel>
                    </ListViewItem>
                    
                    <ListViewItem x:Name="openItem">
                        <RelativePanel>
                            <FontIcon x:Name="openGlyph" Style="{StaticResource SplitViewGlyph}" Glyph="&#xE1A5;"></FontIcon>
                            <TextBlock x:Uid="OpenDatabaseLabel" RelativePanel.RightOf="openGlyph" RelativePanel.AlignVerticalCenterWith="openGlyph"
                                       Visibility="{x:Bind mainSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Open placeholder</TextBlock>
                        </RelativePanel>
                    </ListViewItem>

                    <ListViewItem x:Name="dbHomeItem"
                                  Visibility="{x:Bind ViewModel.DecryptedDatabase, Converter={StaticResource ExistenceToVisibilityConverter}, Mode=OneWay}">
                        <RelativePanel>
                            <FontIcon x:Name="dbHomeGlyph" Style="{StaticResource SplitViewGlyph}" Glyph="&#xE10F;"></FontIcon>
                            <TextBlock x:Uid="Home" RelativePanel.RightOf="dbHomeGlyph" RelativePanel.AlignVerticalCenterWith="dbHomeGlyph"
                                       Visibility="{x:Bind mainSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">DbHome placeholder</TextBlock>
                        </RelativePanel>
                    </ListViewItem>

                    <ListViewItem x:Name="passwordItem">
                        <RelativePanel>
                            <FontIcon x:Name="passwordGlyph" Style="{StaticResource SplitViewGlyph}" Glyph="&#xE8D7;"></FontIcon>
                            <TextBlock x:Uid="PasswordGen" RelativePanel.RightOf="passwordGlyph" RelativePanel.AlignVerticalCenterWith="passwordGlyph"
                                       Visibility="{x:Bind mainSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Password placeholder</TextBlock>
                        </RelativePanel>
                        
                        <FlyoutBase.AttachedFlyout>
                            <Flyout Placement="Right">
                                <StackPanel Orientation="Vertical" Width="286" DataContext="{x:Bind ViewModel.PasswordGenViewModel, Mode=OneWay}"
                                            Margin="0" Padding="0">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="16" />
                                        </Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Margin" Value="6" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock>
                                            <Run x:Uid="PasswordGenLengthInfo">Password length prompt</Run><Run>&#160;</Run>
                                        </TextBlock>
                                        <TextBlock Text="{x:Bind lengthSlider.Value, Mode=OneWay}" />
                                    </StackPanel>
                                    <Slider x:Name="lengthSlider" Minimum="4" Maximum="50" Value="{Binding Length, Mode=TwoWay}" Width="262" Margin="10" StepFrequency="1" HorizontalAlignment="Left" />

                                    <TextBlock x:Uid="PasswordGenAllowedCharsHeader">Allowed chars placeholder</TextBlock>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeUpperAlpha"
                                                      IsChecked="{Binding UseUpperCase, Mode=TwoWay}">ABCDEFGHIJ...</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeLowerAlpha"
                                                      IsChecked="{Binding UseLowerCase, Mode=TwoWay}">acdefghij...</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeDigits"
                                                      IsChecked="{Binding UseDigits, Mode=TwoWay}">0123456789</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeSpace"
                                                      IsChecked="{Binding UseSpace, Mode=TwoWay}">Space</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeSymbols"
                                                      IsChecked="{Binding UseSymbols, Mode=TwoWay}">.!?@#$%^&amp;*&apos;&quot;`\/</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeBrackets"
                                                      IsChecked="{Binding UseBrackets, Mode=TwoWay}">[]{}()&lt;&gt;</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeMinus"
                                                      IsChecked="{Binding UseMinus, Mode=TwoWay}">Minus -</CheckBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal">
                                            <CheckBox x:Uid="PasswordGenIncludeUnderscore"
                                                      IsChecked="{Binding UseUnderscore, Mode=TwoWay}">Underscore _</CheckBox>
                                        </StackPanel>
                                    </Grid>

                                    <TextBlock x:Uid="PasswordGenAlsoAllowHeader">Also allow these characters</TextBlock>
                                    <TextBox x:Uid="PasswordGenAlsoAllowBox" Text="{x:Bind ViewModel.PasswordGenViewModel.AllowList, Mode=TwoWay}">
                                        <ToolTipService.ToolTip>
                                            Placeholder
                                        </ToolTipService.ToolTip>
                                    </TextBox>

                                    <TextBlock x:Uid="PasswordGenExcludeHeader">Exclude these characters</TextBlock>
                                    <TextBox x:Uid="PasswordGenExcludeBox" Text="{x:Bind ViewModel.PasswordGenViewModel.ExcludeList, Mode=TwoWay}">
                                        <ToolTipService.ToolTip>
                                            Placeholder
                                        </ToolTipService.ToolTip>
                                    </TextBox>

                                    <TextBlock x:Uid="PasswordGenGenerateToLabel">Generate to...</TextBlock>
                                    <Grid>
                                        <!-- TODO
                                        <Button x:Uid="PasswordGenPasswordBoxButton" Margin="5">
                                            Password Box
                                            <ToolTipService.ToolTip>
                                                Placeholder
                                            </ToolTipService.ToolTip>
                                        </Button>
                                        -->
                                        <Button x:Uid="PasswordBoxGenPasswordClipboardButton" Margin="5"
                                                Command="{x:Bind ViewModel.PasswordGenViewModel.ClipboardCopyCommand}">
                                            Clipboard
                                            <ToolTipService.ToolTip>
                                                Placeholder
                                            </ToolTipService.ToolTip>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </ListViewItem>

                    <ListViewItem x:Name="helpItem">
                        <RelativePanel>
                            <FontIcon x:Name="helpGlyph" Style="{StaticResource SplitViewGlyph}" Glyph="&#xE11B;"></FontIcon>
                            <TextBlock x:Uid="Help" RelativePanel.RightOf="helpGlyph" RelativePanel.AlignVerticalCenterWith="helpGlyph"
                                       Visibility="{x:Bind mainSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Help placeholder</TextBlock>
                        </RelativePanel>
                    </ListViewItem>

                    <ListViewItem x:Name="settingsItem">
                        <RelativePanel>
                            <FontIcon x:Name="settingsGlyph" Style="{StaticResource SplitViewGlyph}" Glyph="&#xE115;"></FontIcon>
                            <TextBlock x:Uid="Settings" RelativePanel.RightOf="settingsGlyph" RelativePanel.AlignVerticalCenterWith="settingsGlyph"
                                       Visibility="{x:Bind mainSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Settings placeholder</TextBlock>
                        </RelativePanel>
                    </ListViewItem>
                    <!-- Use SelectionChanged for nav -->
                </ListView>
            </SplitView.Pane>
            <SplitView.Content>
                <RelativePanel>
                    <!-- ProgressBar for clearing clipboard automatically -->
                    <!-- Removed in favor of chrome number indicator -->
                    <!-- <ProgressBar x:Name="clipboardClearProgressBar" Minimum="0" Maximum="1" Foreground="{StaticResource GroupBorderColor}" Background="{StaticResource EntryBorderColor}"
                                 RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 Value="{x:Bind ViewModel.ClipboardClearViewModel.NormalizedTimeRemaining, Mode=OneWay}"
                                 Margin="0" Height="5" /> -->
                    
                    <Frame x:Name="contentFrame" Navigated="contentFrame_Navigated"
                           RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                           RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWithPanel="True"
                           IsEnabled="{Binding IsLoading, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"/>
                </RelativePanel>
            </SplitView.Content>
        </SplitView>

        <!-- "Loading" progressbar -->
        <RelativePanel x:Name="loadingPane"
                       x:DeferLoadStrategy="Lazy"
                       Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                       Background="Transparent"
                       RelativePanel.AlignTopWith="appChrome"
                       RelativePanel.AlignBottomWith="appChrome"
                       RelativePanel.AlignLeftWith="appChrome"
					   RelativePanel.AlignRightWith="appChrome"
                       Margin="48,0,0,0">
            <RelativePanel Background="Transparent"
                           RelativePanel.AlignHorizontalCenterWithPanel="True"
                           RelativePanel.AlignVerticalCenterWithPanel="True">
                <ProgressBar x:Name="loadingStatusIndeterminate"
                             IsIndeterminate="True"
                             Width="240"/>
                <ProgressBar x:Name="loadingStatusDeterminate"
                             Minimum="0"
                             Maximum="1"
                             Value="0"
                             Visibility="Collapsed"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center" />
            </RelativePanel>
        </RelativePanel>

    </RelativePanel>
</vb:RootViewBase>
